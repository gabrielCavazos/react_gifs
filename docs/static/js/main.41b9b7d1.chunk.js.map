{"version":3,"sources":["componets/AddCategory.js","helpers/getGifs.js","componets/GifGridItem.js","componets/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","URL","params","api_key","q","limit","search","URLSearchParams","toString","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","image","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","PropTypes","func","isRequired","ReactDOM","render","document","getElementById"],"mappings":"oMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAEI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uCCLdG,EAAO,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,6DACbC,EAAM,IAAIC,IAAI,wCAEdC,EAAS,CACXC,QAAQ,mCACRC,EAAEN,EACFO,MAAM,IAGVL,EAAIM,OAAS,IAAIC,gBAAgBL,GAAQM,WATtB,SAWAC,MAAMT,GAXN,cAWbU,EAXa,gBAaEA,EAAKC,OAbP,uBAaZC,EAbY,EAaZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,IACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXjB,IAAG,UAAEe,EAAIG,cAAN,iBAAE,EAAYC,wBAAd,aAAE,EAA8BnB,QAnBxB,kBAuBZa,GAvBY,4CAAH,sDCCXO,EAAc,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACdJ,GAAcI,EAAlBL,GAAkBK,EAAdJ,OAAOjB,EAAOqB,EAAPrB,IAClB,OACI,sBAAKsB,UAAU,yDAAf,UACI,4BAAIL,IACJ,qBAAKM,IAAKvB,EAAKwB,IAAKP,QCFnBQ,EAAU,SAAC,GAAgB,IAAf3B,EAAc,EAAdA,SAErB,ECJwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/B4B,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAbAC,qBAAU,WACND,EAAS,CACLhB,KAAM,GACNc,SAAS,IAEb7B,EAAQC,GAAUgC,MAAK,SAAAC,GACnBH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGlB,CAAC5B,IAEG6B,EDhBwBK,CAAalC,GAAhCoB,EAAZ,EAAON,KAAac,EAApB,EAAoBA,QAEpB,OACI,qCACA,6BAAoB5B,GAAXA,GACR4B,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAGYJ,EAAOJ,KAAI,SAACO,GACR,OAAO,cAAC,EAAD,CAA4BA,MAAOA,GAAjBA,EAAML,aEZ1CiB,EAAe,WAGxB,MAAoCjD,mBAAS,CAAC,cAA9C,mBAAOkD,EAAP,KAAmBnD,EAAnB,KAKA,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEQmD,EAAWpB,KAAI,SAAChB,GACZ,OAAO,cAAC,EAAD,CAASA,SAAUA,GAAeA,EAAS,iBAQ1EhB,EAAYqD,UAAY,CACpBpD,cAAeoD,IAAUC,KAAKC,Y,MCxBlCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.41b9b7d1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n","\r\n    export const getGifs = async (category) => {\r\n        const url = new URL('https://api.giphy.com/v1/gifs/search')\r\n        \r\n        const params = {\r\n            api_key:'mDJQHz1D4Ezf4mhT9X0fO0rkzkAHLC7u', \r\n            q:category,\r\n            limit:10,\r\n        } \r\n            \r\n        url.search = new URLSearchParams(params).toString()\r\n\r\n        const resp = await fetch(url)\r\n\r\n        const {data} = await resp.json()\r\n\r\n        const gifs = data.map(img => {\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium?.url\r\n            }\r\n        })\r\n\r\n        return gifs\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({image}) => {\r\n    const {id, title, url} = image;\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__fadeIn\">\r\n            <p>{title}</p>\r\n            <img src={url} alt={title}></img>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category)\r\n\r\n    return (\r\n        <>\r\n        <h3 key={category}>{category}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">\r\n                      \r\n                {\r\n                    images.map((image) => {\r\n                        return <GifGridItem key={image.id} image={image}></GifGridItem>\r\n                    })\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    \r\n    useEffect(() => {\r\n        setState({\r\n            data: [],\r\n            loading: true\r\n        })\r\n        getGifs(category).then(imgs =>{\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        });\r\n    }, [category])\r\n\r\n    return state\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './componets/AddCategory'\r\nimport PropTypes from 'prop-types'\r\nimport { GifGrid } from './componets/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    //const handleAdd = () => {\r\n    //    setCategories(cats => [...categories, 'Hunter Hunter'])\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2> \r\n            <hr/>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <ol>\r\n                {\r\n                    categories.map((category) => {\r\n                        return <GifGrid category={category} key={category+'asdf'}></GifGrid>\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.PropTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}